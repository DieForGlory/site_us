// frontend/src/components/Advantages/Advantages.jsx
import React, { useRef } from 'react';
import { motion, useScroll, useTransform } from 'framer-motion';
import './Advantages.css';

const advantagesData = [
  {
    icon: 'üèÜ',
    title: '–õ–∏–¥–µ—Ä —Ä—ã–Ω–∫–∞',
    description: '–ë–æ–ª–µ–µ 10 –ª–µ—Ç —Å–æ–∑–¥–∞–µ–º –∑–Ω–∞–∫–æ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–π –æ–±–ª–∏–∫ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –¢–∞—à–∫–µ–Ω—Ç–∞.',
    img: 'https://images.unsplash.com/photo-1605283134159-8d53f5b7216a?q=80&w=2070'
  },
  {
    icon: 'üìç',
    title: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏',
    description: '–ù–∞—à–∏ –∫–æ–º–ø–ª–µ–∫—Å—ã —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ —Å–∞–º—ã—Ö –ø—Ä–µ—Å—Ç–∏–∂–Ω—ã—Ö –∏ —É–¥–æ–±–Ω—ã—Ö –¥–ª—è –∂–∏–∑–Ω–∏ —Ä–∞–π–æ–Ω–∞—Ö.',
    img: 'https://images.unsplash.com/photo-1542361345-89e58247f2d5?q=80&w=1974'
  },
  {
    icon: 'üåø',
    title: '–ò–Ω–Ω–æ–≤–∞—Ü–∏–∏ –∏ –∫–æ–º—Ñ–æ—Ä—Ç',
    description: '–ú—ã –ø—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–¥–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã –¥–ª—è –∂–∏–∑–Ω–∏.',
    img: 'https://images.unsplash.com/photo-1449844908441-8829872d2607?q=80&w=2070'
  }
];

// –í –∫–æ–º–ø–æ–Ω–µ–Ω—Ç AdvantageCard –Ω–µ –≤–Ω–æ—Å–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏–π
const AdvantageCard = ({ advantage, progress, range }) => {
    // --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –õ–û–ì–ò–ö–ò –ê–ù–ò–ú–ê–¶–ò–ò ---
    // –°–æ–∑–¥–∞–µ–º –±–æ–ª–µ–µ —Ä–µ–∑–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥:
    // –≠–ª–µ–º–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∑—Ä–∞—á–µ–Ω -> –±—ã—Å—Ç—Ä–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è -> –≤–∏–¥–µ–Ω -> –±—ã—Å—Ç—Ä–æ –∏—Å—á–µ–∑–∞–µ—Ç -> –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–∑—Ä–∞—á–µ–Ω
    const opacity = useTransform(progress,
        [range[0], range[0] + 0.05, range[1] - 0.05, range[1]],
        [0, 1, 1, 0]
    );
    const y = useTransform(progress,
        [range[0], range[0] + 0.05],
        [50, 0] // –¢–æ–ª—å–∫–æ –∞–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    );

    return (
        <motion.div style={{ opacity, y }} className="advantage-card-content">
            <span className="advantage-icon">{advantage.icon}</span>
            <h2>{advantage.title}</h2>
            <p>{advantage.description}</p>
        </motion.div>
    );
};

// –í –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç Advantages –Ω–µ –≤–Ω–æ—Å–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É, —Ç–æ–ª—å–∫–æ –≤ AdvantageCard –≤—ã—à–µ
const Advantages = () => {
    const containerRef = useRef(null);
    const { scrollYProgress } = useScroll({
        target: containerRef,
        offset: ['start start', 'end end']
    });

    return (
        <div ref={containerRef} className="advantages-scrolly-container">
            <div className="advantages-sticky-wrapper">
                {advantagesData.map((advantage, i) => {
                    const targetScale = 1 - ((advantagesData.length - i) * 0.05);
                    return (
                        <motion.div
                            key={i}
                            className="advantage-card-visual"
                            style={{
                                backgroundImage: `url(${advantage.img})`,
                                scale: useTransform(scrollYProgress, [i / advantagesData.length, 1], [1, targetScale])
                            }}
                        >
                           <div className="advantage-card-overlay"></div>
                        </motion.div>
                    );
                })}
                 <div className="advantage-text-container">
                    {advantagesData.map((advantage, i) => {
                        const start = i / advantagesData.length;
                        const end = start + (1 / advantagesData.length);
                        return <AdvantageCard key={i} advantage={advantage} progress={scrollYProgress} range={[start, end]} />
                    })}
                </div>
            </div>
        </div>
    );
};

export default Advantages;